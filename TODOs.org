* 设计

shell 层
--------------------
系统调用
文件操作　| 文件系统操作　| 目录操作
--------------------
文件系统实现-和数据有关的数据结构
文件系统元信息　| 目录树（目录元信息，目录内容）　| 文件元信息，文件内容
文件系统初始化
--------------------
文件系统实现 - 块管理
空闲块管理
--------------------
模拟的 底层 IO 操作
io_read() 从模拟磁盘的扇区中读取内容
io_write()　向模拟磁盘的扇区中写入内容
--------------------
模拟的 底层 IO 操作实际实现
标准库的文件操作函数

* 代码规范方面
** 所有命名一律使用下划线。
** 类型名称后一律加_t。
** 真正的全局变量（非设计意义上局限于某几个模块使用的），前加 g_。
** 看上一条。如果发现需要定义真正的全局变量，是否可以把它转换成函数调用的形式？
** 函数参数的顺序：IN 参数，EDIT 参数，OUT 参数。

** 工具之类的模块函数前加命名空间 ft_
** 系统调用层的模块函数前加命名空间 fufs_
** 其它的模块没有要求

** 字节敏感的地方， *不允许* 使用 int 等类型，可以使用 stdint.h 中的类型。


* 工具
cmake http://hahack.com/codes/cmake/
